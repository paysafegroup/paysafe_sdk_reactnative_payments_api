pluginManagement {
  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    maven {
      url new File(
        ["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(),
        "../android/maven"
      )
    }
  }

  plugins {
    // Explicitly declare expo-module-gradle-plugin with version for Gradle 8.10.2+
    id("expo-module-gradle-plugin") version "1.1.5" apply false
  }

  includeBuild(new File(
    ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()
  ).getParentFile().toString())
}

plugins { id("com.facebook.react.settings") }

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    def command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'android'
    ].toList()
    ex.autolinkLibrariesFromCommand(command)
  }
}

rootProject.name = 'DemoAppExpo'

dependencyResolutionManagement {
  versionCatalogs {
    reactAndroidLibs {
      from(files(new File(
        ["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(),
        "../gradle/libs.versions.toml"
      )))
    }
  }
}

apply from: new File(
  ["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(),
  "../scripts/autolinking.gradle"
)
useExpoModules()

include ':app'
includeBuild(new File(
  ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()
).getParentFile())
